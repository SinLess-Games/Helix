##########################################################################################################################################################
##########################################################################################################################################################
####    _______ _________       ______   _______  _______           _______  _______  _       _________ _______ __________________ _______  _         ####
####   (  ___  )\__   __/      (  __  \ (  ___  )(  ____ \|\     /|(       )(  ____ \( (    /|\__   __/(  ___  )\__   __/\__   __/(  ___  )( (    /|  ####
####   | (   ) |   ) (         | (  \  )| (   ) || (    \/| )   ( || () () || (    \/|  \  ( |   ) (   | (   ) |   ) (      ) (   | (   ) ||  \  ( |  ####
####   | (___) |   | |         | |   ) || |   | || |      | |   | || || || || (__    |   \ | |   | |   | (___) |   | |      | |   | |   | ||   \ | |  ####
####   |  ___  |   | |         | |   | || |   | || |      | |   | || |(_)| ||  __)   | (\ \) |   | |   |  ___  |   | |      | |   | |   | || (\ \) |  ####
####   | (   ) |   | |         | |   ) || |   | || |      | |   | || |   | || (      | | \   |   | |   | (   ) |   | |      | |   | |   | || | \   |  ####
####   | )   ( |___) (___      | (__/  )| (___) || (____/\| (___) || )   ( || (____/\| )  \  |   | |   | )   ( |   | |   ___) (___| (___) || )  \  |  ####
####   |/     \|\_______/      (______/ (_______)(_______/(_______)|/     \|(_______/|/    )_)   )_(   |/     \|   )_(   \_______/(_______)|/    )_)  ####
####                                                                                                                                                  ####
##########################################################################################################################################################
##########################################################################################################################################################

THEOREM:
HELIX will use several AI learning models to complete different tasks as they come up. 
    #########################
    ## Tasks handled by AI ##
    #########################

    1. Converstional model
    2. Speech Recognition model
    3. Natural language understanding (nlu)
    4. learn how each end-user uses Helix to become more helpful over time with use

Helix Is meant to be a one stop shop with multiple capabilities to allow ease of use and preferability. 

##########################################################################################################################################################
##########################################################################################################################################################
####                                                                                                                                                  ####
####                                                             WHAT Can AI Do?                                                                      ####
####                                                                                                                                                  ####
##########################################################################################################################################################
##########################################################################################################################################################

DEFINIRION OF AI
AI is the ability of a machine to display human-like capabilities such as reasoning, learning, planning and creativity.

AI enables technical systems to perceive their environment, deal with what they perceive, solve problems and act to achieve a specific goal.
The computer receives data - already prepared or gathered through its own sensors such as a camera - processes it and responds.

AI systems are capable of adapting their behaviour to a certain degree by analysing the effects of previous actions and working autonomously.

Why is AI important?
Some AI technologies have been around for more than 50 years, but advances in computing power, the availability of enormous quantities of data and new 
algorithms have led to major AI breakthroughs in recent years.

Artificial intelligence is seen as central to the digital transformation of society and it has become an EU priority.

Future applications are expected to bring about enormous changes, but AI is already present in our everyday lives.


What is artificial intelligence and how is it used?: News: European Parliament. What is artificial intelligence and how is it used?
| News | European Parliament. (2021, March 29).
https://www.europarl.europa.eu/news/en/headlines/society/20200827STO85804/what-is-artificial-intelligence-and-how-is-it-used. 


##########################################################################################################################################################
##########################################################################################################################################################
####                                                                                                                                                  ####
####                                                      IMPLEMENTATION IN OUR CASE                                                                  ####
####                                                                                                                                                  ####
##########################################################################################################################################################
##########################################################################################################################################################


##########################################################################################################################################################
##########################################################################################################################################################
####                                                                                                                                                  ####
####                                                                 ROAD MAP                                                                         ####
####                                                                                                                                                  ####
##########################################################################################################################################################
##########################################################################################################################################################


##########################################################################################################################################################
##########################################################################################################################################################
####                                                                                                                                                  ####
####                                                               REQUIRMENTS                                                                        ####
####                                                                                                                                                  ####
##########################################################################################################################################################
##########################################################################################################################################################


                                                      #####################################
                                                      ####           TENSORFLOW        ####
                                                      #### https://www.tensorflow.org/ ####
                                                      #####################################

SOFTWARE REQUIREMENTS:
    -- Python 3.6-3.8
    -- Windows 7 or later
    -- ubuntu 16.04 or later

                                ###########################################################################
                                ####                                                                   ####
                                ####               LINUX TESTED BUILD CONFIGURATION                    ####
                                ####                                                                   ####
                                ###########################################################################
                                ####      Version     |  Python Version  |   Compiler  |  Bazel Tools  ####
                                ####__________________|__________________|_____________|_______________####
                                ####                  |                  |             |               ####
                                #### Tensorflow-2.5.0 |      3.6-3.9     |  GCC 7.3.1  |  Bazel 3.7.2  ####
                                ####                  |                  |             |               ####
                                ###########################################################################

DOCKER REQUIREMENTS:
    -- Docker installed on system
    --  NVIDIA GPU Docker support
        -- NVIDIA GPUS in server
        -- https://github.com/NVIDIA/nvidia-docker
DOCKER INSTALL:
    -- docker Install Guide
        -- https://www.tensorflow.org/install/docker

Tensorflow API Documentation
    -- https://www.tensorflow.org/api_docs/python/tf

Tensorflow Learn Portal
    -- https://www.tensorflow.org/learn


                                                      #####################################
                                                      ####            KERAS            ####
                                                      ####      https://keras.io/      ####
                                                      #####################################
KERAS API Documentation:
    --https://keras.io/api/


##########################################################################################################################################################
##########################################################################################################################################################
####                                                                                                                                                  ####
####                                                               Software                                                                           ####
####                                                                                                                                                  ####
##########################################################################################################################################################
##########################################################################################################################################################

Postman (APIs)
Bootstrap (Preety)
Github (sourcecode)
Pycharm (IDE)
Flask (webserver)
Python (language)
Docker? (host)


##########################################################################################################################################################
##########################################################################################################################################################
####                                                                                                                                                  ####
####                                                         Structure                                                                                ####
####                                                                                                                                                  ####
##########################################################################################################################################################
##########################################################################################################################################################

Speech engine
 - Recognition
 - synthesis

Web User Interface
 - flask

Orchestration engine
 - Command loop

Skills (can add more)
 - weather (API)
 - news (API)
 - calander (API)
 - news
 - todo
 - stocks
 - home automation (MQTT)
 - Fun
   - jokes
   - insults
   - time

##########################################################################################################################################################
##########################################################################################################################################################
####                                                                                                                                                  ####
####                                                             Skills                                                                               ####
####                                                                                                                                                  ####
##########################################################################################################################################################
##########################################################################################################################################################

Framework for extending capabilities

- We want to add new skills over time as we develop them; lets create skills framework:
  - Skills have name and discription
  - skills have one or more actions
  - Skills have a version
  - Skills return success or failure status
  - skills can have a web UI

##########################################################################################################################################################
##########################################################################################################################################################
####                                                                                                                                                  ####
####                                                         Speech Enigine                                                                           ####
####                                                                                                                                                  ####
##########################################################################################################################################################
##########################################################################################################################################################

pre-requisites
-- sudo apt-get install portaudio
-- sudo apt-get install espeak


##########################################################################################################################################################
##########################################################################################################################################################
####                                                                                                                                                  ####
####                                                               venv                                                                               ####
####                                                                                                                                                  ####
##########################################################################################################################################################
##########################################################################################################################################################

to activate
-- source venv/bin/activate

to deactivate
-- deactivate

##########################################################################################################################################################
##########################################################################################################################################################
####                                                                                                                                                  ####
####                                                             Notes                                                                                ####
####                                                                                                                                                  ####
##########################################################################################################################################################
##########################################################################################################################################################

Speech - google
 - Speech recognition
 - speech synthesis



API(skills)
 - weather (API)
 - news (API)
 - calander (API)
 - news
 - todo
 - stocks
 - home automation (MQTT)
 - Fun
   - jokes
   - insults
   - time
   -
 -

Web UI
 - Flask
 - mark down
 - Jekyll
 - Beautiful soup

